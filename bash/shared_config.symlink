# Source ~/.localrc if it exists
[[ -e $HOME/.localrc ]] && source $HOME/.localrc
export BROWSER=open
export DOTFILES=$PROJECTS/dotfiles

# Editor
if [[ -f `which mvim` ]] ; then
  export VIM='mvim -v'
else
  export VIM=vim
fi
export EDITOR=$VIM
alias e=$EDITOR

# Git
[[ -f `which hub` ]] && alias git='hub'
alias g='git'
complete -o default -o nospace -F _git g

if [[ -f `which hitch` ]] ; then
  alias unhitch='hitch --unhitch'
  hitch() {
    command hitch "$@"
    if [[ -s "$HOME/.hitch_export_authors" ]] ; then source "$HOME/.hitch_export_authors" ; fi
  }
fi

if [ -d $(brew --prefix)/etc/bash_completion.d ]; then
  . $(brew --prefix)/etc/bash_completion.d/git-completion.bash
  . $(brew --prefix)/etc/bash_completion.d/hub.bash_completion.sh
fi

# Heroku
alias h='heroku'
alias s='staging'
alias p='production'

# Ruby
alias b='bundle'
alias be='bundle exec'
alias bi='bundle install'
alias bu='bundle update'
alias f='foreman'
alias fb='foreman run bundle exec'
alias fr='foreman run'
alias r='rake'

if [[ -e /usr/local/share/chruby ]]; then
  source /usr/local/share/chruby/chruby.sh
  source /usr/local/share/chruby/auto.sh
  chruby $(cat ~/.ruby-version)
fi

# Path
export PATH=./bin
export PATH=$PATH:$HOME/bin
export PATH=$PATH:/bin
export PATH=$PATH:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin
export PATH=$PATH:/usr/local/heroku/bin
export PATH=$PATH:/usr/local/Cellar/go/1.2/libexec/bin

# AWS
export PATH=$PATH:$PROJECTS/awsam@mheffner/bin
if [ -s $HOME/.awsam/bash.rc ]; then
  source $HOME/.awsam/bash.rc
fi

# Vagrant
alias v='vagrant'

# System
function colours() {
  for i in {0..255} ; do
    printf "\x1b[38;5;${i}m${i} "
  done
}
alias fliptable='echo （╯°□°）╯︵ ┻━┻'
alias ll='ls -al'
alias lc='launchctl'
#alias serve='ruby -run -e httpd ./ --port 3333'
alias ssh_up='systemsetup -setremotelogin on'
alias ssh_down='systemsetup -setremotelogin off'

# Tmux
alias tmux='tmux -2'
#if [[ "$(uname)" = 'Darwin' ]]; then
#  alias tmux='tmux -2 -f ~/.tmux-osx.conf'
#else
#  alias tmux='tmux -2'
#fi

ec2-find() {
  aws ec2 describe-instances --filters Name=tag-value,Values=*$1* | grep "$1\|InstanceId" | uniq | sed -e 's/^[ \t\]*//' -e 's/,//g' | paste - -
}
