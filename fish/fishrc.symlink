# Variables
set fish_greeting   ''
set -x EDITOR       'mvim -v'
set -x BROWSER      open
#exec '. ~/.localrc'
set -x GIT_SANDBOX  $PROJECTS/sandbox

# Editor
alias e       $EDITOR

# Git
if test (which -s hub; echo $status) = 0
  alias git 'hub'
end
alias g       'git'
alias ga      'git add'
alias gaa     'git add --all'
alias gb      'git branch'
alias gba     'git branch --all'
alias gbd     'git branch --delete'
alias gbr     'git browse'
alias gc      'git commit --all --verbose'
alias gca     'git commit --amend'
alias gcl     'git clone'
alias gco     'git checkout'
alias gcot    'git checkout --track'
alias gcp     'git cherry-pick'
alias gd      'git diff'
alias dlc     'diff --cached HEAD^'
alias gf      'git fetch'
alias gfl     'git log -u'
alias gfp     'git fetch --prune'
alias gl      'git log --decorate'
alias gla     'git log --abbrev-commit --all --decorate --graph --pretty=oneline'
alias glf     'git log --decorate --numstat --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]"'
alias gm      'git merge'
alias gmm     'git merge master'
alias gn      'git n'
alias gpl     'git pull'
alias gpr     'git pull-request'
alias gps     'git push'
alias gr      'git rebase'
alias gra     'git rebase --abort'
alias grc     'git rebase --continue'
alias gre     'git reset'
alias gri     'git rebase --interactive'
alias gs      'git status --branch --short'
alias gst     'git stash'
alias gsta    'git stash apply'
alias gstl    'git stash list'
alias gsts    'git stash save'
alias gsub    'git submodule'
alias gsy     'git pull; and git push'

function sandbox
  cd $GIT_SANDBOX; and git clone $argv; and cd `last_modified`
end

# Shell
alias reload  '. ~/.config/fish/config.fish'

# Prompt
function git_branch
  if test -d "./.git"
    printf (git branch --all | grep '*' | cut -d ' ' -f 2-)
  end
end

function fish_prompt
  echo -n (git_branch) 'âœ–  '
end

#function fish_right_prompt
#  git_branch
#end
