" Vim
" ===

" Keep this at top - Use Vim settings, rather then Vi settings
set nocompatible

" Automatically reload vimrc when it's saved
autocmd! BufWritePost vimrc.symlink so ~/.vimrc

" Source ~/.vimrc.before if it exists
if filereadable(expand('~/.vimrc.before'))
  source ~/.vimrc.before
endif

" Pathogen Initialization
" =======================

" This loads all the plugins in ~/.vim/bundle
" Use tpope's pathogen plugin to manage all other plugins
runtime bundle/vim-pathogen/autoload/pathogen.vim
call pathogen#infect()
call pathogen#helptags()

" General Config
" ==============

let mapleader=','
set encoding=utf-8
set number                      " Line numbers
set backspace=indent,eol,start  " Allow backspace in insert mode
set history=1000                " Store lots of :cmdline history
set autoread                    " Reload files changed outside vim
set laststatus=2                " Always show status line
set clipboard=unnamed           " Use system clipboard
set hidden                      " Buffers can exist in the background
set splitright                  " Opens vertical split right of current window
set splitbelow                  " Opens horizontal split below current window
set showmode                    " Show current mode down the bottom
set showcmd                     " Show incomplete cmds down at the bottom
set shortmess=aoOstTWAI         " See :help shortmess
set ttyfast                     " Send more info on redraws
if exists('+colorcolumn')
  set colorcolumn=+1            " See :help colorcolumn
endif

" Spelling
" ========
set spellfile=~/.vim/spellfile.utf-8.add
set dictionary=/usr/share/dict/words

" Syntax
" ======

syntax enable
colorscheme solarized
set background=dark

" Filetypes
" =========

filetype plugin on
filetype indent on

augroup filetypes
  autocmd!
  " Indent-based folding
  autocmd BufRead,BufNewFile,BufWrite *.{coffee,json,py,yaml,yml} set foldmethod=indent
  " JavaScript
  autocmd BufRead,BufNewFile,BufWrite *.{js.asp,json} set filetype=javascript
  " Writing
  autocmd Filetype mkd set wrap linebreak nolist spell textwidth=80
  autocmd Filetype txt set wrap linebreak nolist spell textwidth=80
  " Property lists
  autocmd BufRead,BufNewFile,BufWrite *.{plist,xml} set filetype=xml
  " Ruby
  autocmd BufRead,BufNewFile,BufWrite {Capfile,Gemfile,Guardfile,Procfile,Rakefile,Thorfile,.ru,.caprc,.irbrc,.jbuilder,.rake} set filetype=ruby
augroup end

" Search Settings
" ===============

set incsearch        " Find the next match while typing search
set hlsearch         " Hilight searches by default
set viminfo='100,f1  " Save up to 100 marks, enable capital marks

" Turn Off Swap Files
" ===================

set noswapfile
set nobackup
set nowritebackup

" Indentation and Display
" =======================

set autoindent
set smartindent
set smarttab
set shiftwidth=2
set softtabstop=2
set tabstop=2
set expandtab

set nowrap                            " Don't wrap lines
set linebreak                         " Wrap lines at convenient points
set list listchars=tab:\ \ ,trail:·   " Display tabs and trailing spaces visually
" Don't show trailing spaces in insert mode
augroup trailing
  autocmd!
  autocmd InsertEnter * :set listchars-=trail:·
  autocmd InsertLeave * :set listchars+=trail:·
augroup end

" Folds
" =====

set foldmethod=indent   " Fold based on indent
set foldnestmax=3       " Deepest fold is 3 levels
set nofoldenable        " Don't fold by default

" Completion
" ==========

set wildmode=list:longest
set wildmenu                                    " Enable ctrl-n and ctrl-p to scroll through matches
set wildignore=.hg,.git,.svn                    " Version control
set wildignore+=*.o,*.obj,*~                    " Stuff to ignore when tab completing
set wildignore+=*vim/backups*                   " Vim files
set wildignore+=*.DS_Store                      " OS X junk
set wildignore+=*.jpg,*.bmp,*.gif,*.png,*.jpeg  " Binary images
set wildignore+=*.spl                           " Spelling word lists

" Scrolling
" =========

set scrolloff=10
set sidescrolloff=15
set sidescroll=1

" Status Line
" ===========

set statusline=                                 " Override default
set statusline+=%{fugitive#statusline()[4:-2]}  " Show fugitive git info
set statusline+=\ %f\ %m\ %r                    " Show filename/path
set statusline+=%=                              " Set right-side status info after this line
set statusline+=%l/%L:%v                        " Set <line number>/<total lines>:<column>
set statusline+=\                               " Set ending space
