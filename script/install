#!/usr/bin/env bash
DIR=$HOME/.dotfiles
DESTINATION=$HOME

RUBY_VERSION='1.9.3-p194'

OS=`uname -s`
KERNEL=`uname -r`

if [[ $KERNEL =~ 'Darwin' ]] ; then
  brew install git hub tmux macvim zsh
elif [[ $KERNEL =~ 'Linux' ]] ; then
  if [[ -f `command -v pacman` ]] ; then
    pacman -Syu gcc git make tmux vim zsh # Arch Linux
  else
    sudo apt-get install gcc git make tmux vim zsh # Debian
  fi
fi

# Initialize and update git submodules
echo "Initializing and updating git submodules..."
cd $DIR
git submodule init
git submodule update

# Download ruby-build
if [ ! -d "$HOME/.rbenv/plugins/ruby-build" ]; then
  echo "Downloading ruby-build..."
  mkdir -p ruby/rbenv.symlink/plugins
  git clone https://github.com/sstephenson/ruby-build.git ruby/rbenv.symlink/plugins/ruby-build
fi

# Move symlinks into place
#for file in $DIR/**/*.symlink
#do
#  name=${file##*/} # Strip path
#  name=${name//.symlink} # Strip '.symlink'
#  ln -s -i "$file" "$HOME/.$name"
#done

# Move symlinks into place (from pastjean/dotfiles)
skipAll=""
overwriteAll=""
backupAll=""
for LINK in $DIR/**/*.symlink
do
  overwrite=""
  backup=""
  skip=""

  FILE=".$(basename $LINK | sed -e 's/\.symlink//')"
  TARGET="$DESTINATION/$FILE"

  if [[ -f $TARGET  && "$skipAll$overwriteAll$backupAll" == "" ]]
  then
    # File exists
    echo "File $TARGET exists, what do you want to do?\n [s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all"
    read action
    [[ "$action" == "s" ]] && skip="true"
    [[ "$action" == "S" ]] && skipAll="true"
    [[ "$action" == "o" ]] && overwrite="true"
    [[ "$action" == "O" ]] && overwriteAll="true"
    [[ "$action" == "b" ]] && backup="true"
    [[ "$action" == "B" ]] && backupAll="true"
  fi

  if [[ "$skipAll" == "" ]]
  then
    [[ "$overwriteAll" == "true" || "$overwrite" == "true" ]] && rm -rf $TARGET
    [[ "$backupAll" == "true" || "$backup" == "true" ]] && mv "$TARGET" "$DESTINATION/$FILE.backup"
    ln -s "$LINK" "$TARGET"
  fi
done

# Load rbenv
export PATH="$HOME/.rbenv/bin:$PATH"
eval "$(rbenv init -)"

if [[ ! `rbenv version` =~ $RUBY_VERSION ]] ; then
  # Install ruby
  echo "Installing Ruby $RUBY_VERSION..."
  mkdir -p $HOME/.tmp
  export TMP_DIR=$HOME/.tmp
  rbenv install $RUBY_VERSION
  rbenv global $RUBY_VERSION
  rbenv rehash
  rm $HOME/.tmp/ruby-build*
fi

echo 'Done!'
