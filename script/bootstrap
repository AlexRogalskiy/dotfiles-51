#!/usr/bin/env bash
set -e

RUBY_VERSION="1.9.3-p362" # Ruby version you want to install

DIR=$HOME/.dotfiles
DESTINATION=$HOME

OS=`uname -s`
KERNEL=`uname -r`

touch $HOME/.localrc
mkdir -p $HOME/.tmp
mkdir -p $HOME/code/sandbox
cd $DIR

# Initialize and update git submodules
echo "Initializing git submodules"
git submodule --quiet init
echo "Updating git submodules"
git submodule --quiet update

# Install chruby
if [[ -f /usr/local/share/chruby/chruby.sh ]] ; then
  source /usr/local/share/chruby/chruby.sh
else
  echo "Installing chruby"
  wget -O chruby-0.3.1.tar.gz https://github.com/postmodern/chruby/archive/v0.3.1.tar.gz
  tar -xzvf chruby-0.3.1.tar.gz
  rm -f chruby-0.3.1.tar.gz
  cd chruby-0.3.1/
  sudo make install
  cd ../
  rm -rf chruby-0.3.1/
fi

# Install the latest ruby-build
cd ruby/ruby-build/
sudo ./install.sh
cd ../../

# Check for desired Ruby
if [[ `ls $HOME/.rubies` =~ $RUBY_VERSION ]] ; then
  echo "Ruby $RUBY_VERSION installed"
else
  echo "Installing Ruby $RUBY_VERSION..."
  export TMPDIR=$HOME/.tmp # This is needed for systems with low memory
  ruby-build $RUBY_VERSION $HOME/.rubies/$RUBY_VERSION
  rm $HOME/.tmp/ruby-build*
  chruby $RUBY_VERSION
  gem install bundler
fi

# Move symlinks into place (from pastjean/dotfiles)
echo "Installing dotfiles"
skipAll=""
overwriteAll=""
backupAll=""
for LINK in $DIR/**/*.symlink
do
  overwrite=""
  backup=""
  skip=""

  FILE=".$(basename $LINK | sed -e 's/\.symlink//')"
  TARGET="$DESTINATION/$FILE"

  if [[ -f $TARGET  && "$skipAll$overwriteAll$backupAll" == "" ]]
  then
    # File exists
    echo "File $TARGET exists, what do you want to do?\n [s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all"
    read action
    [[ "$action" == "s" ]] && skip="true"
    [[ "$action" == "S" ]] && skipAll="true"
    [[ "$action" == "o" ]] && overwrite="true"
    [[ "$action" == "O" ]] && overwriteAll="true"
    [[ "$action" == "b" ]] && backup="true"
    [[ "$action" == "B" ]] && backupAll="true"
  fi

  if [[ "$skipAll" == "" ]]
  then
    [[ "$overwriteAll" == "true" || "$overwrite" == "true" ]] && rm -rf $TARGET
    [[ "$backupAll" == "true" || "$backup" == "true" ]] && mv "$TARGET" "$DESTINATION/$FILE.backup"
    ln -s "$LINK" "$TARGET"
    #echo "Linking $LINK to $TARGET"
  fi
done

source $HOME/.zshrc

echo 'Done!'
